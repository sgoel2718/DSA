#include <iostream>
#include <algorithm>
using namespace std;

int knapsack(int wt[], int val[], int n, int W)
{int t[n+1][W+1];
    int i, j; 
        for(i=0;i<n+1;i++)
        {
            for(j=0;j<W+1;j++)
            {
                if(i==0 || j==0)
                    t[i][j]=0;
            }
        }
    
    for(i=1;i<n+1;i++)
    {
        for(j=1;j<W+1;j++)
        {
            if(wt[i-1]<=j)
            {
                t[i][j]=max(val[i-1]+t[i-1][j-wt[i-1]],t[i-1][j]);
            }
            else{
                t[i][j]=t[i-1][j];
            }
        }
    }
    return t[n][W];
}

int main()
{
    int weight[3]={10,20,30};
    int price[3]={60,100,120};
    int n=sizeof(price)/sizeof(price[0]);
    int w=50;
    cout << "Maximum profit you can gain: " << knapsack(weight, price, n, w);
    return 0;
}