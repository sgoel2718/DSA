#include <iostream>
#include <vector>
#include <queue>
using namespace std;

void dfs(int node, vector<int>& vis, vector<int> adj[], vector<int>& storedfs)
{
    storedfs.push_back(node);
    vis[node]=1;
    for(auto i : adj[node])
    {
        if(!vis[i])
        {
            dfs(i,vis,adj,storedfs);
        }
    }
}

vector<int> dfsOfGraph(int N,vector<int> adj[])
{
    int i;
    vector<int> storedfs;
    vector<int> vis(N+1,0);
    
    for(i=1;i<=N;i++)
    {
        if(!vis[i])
        {
            dfs(i,vis,adj,storedfs);
        }
    }
    return storedfs;
}

int main()
{
    int n,m;
    cin>>n>>m;
    vector<int> adj[n+1];
    int u,v;
    for(int i=0;i<m;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<int> res = dfsOfGraph(n,adj);
    for(auto i: res)
    {
        cout<<i<<" ";
    }
    return 0;
}
