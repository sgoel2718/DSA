#include <iostream>
#include <vector>
#include <queue>
using namespace std;

bool checkCycle(int node, int N, vector<int> adj[], vector<int>& vis)
{
    queue<pair<int,int>> q;
    vis[node]=true;
    q.push({node,-1});
    
    while(!q.empty())
    {
        int n=q.front().first;
        int par=q.front().second;
        q.pop();
        
        for(auto i: adj[n])
        {
            if(!vis[i])
            {
                vis[i]=true;
                q.push({i,n});
            }
            else
            {
                if(par!=i)
                return true;
            }
        }
    }
    return false;
}

bool isCycle(int N, vector<int> adj[])
{
    vector<int> vis(N+1,0);
    for(int i=1;i<=N;i++)
    {
        if(!vis[i]){
            if(checkCycle(i,N,adj,vis))
            {
                return true;
            }
        }
    }
    return false;
}

int main()
{
    int n,m;
    cin>>n>>m;
    vector<int> adj[n+1];
    int u,v;
    for(int i=0;i<m;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    cout<<isCycle(n,adj);
    return 0;
}