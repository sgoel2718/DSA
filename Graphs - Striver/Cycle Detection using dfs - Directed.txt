#include <iostream>
#include <vector>
#include <queue>
using namespace std;

bool checkDfs(int node, vector<int> adj[], vector<int>& vis, vector<int>& dfs)
{
    vis[node]=1;
    dfs[node]=1;
    for(auto i : adj[node])
    {
        if(!vis[i])
        {
            if(checkDfs(i,adj,vis,dfs))
                return true;
        }
        else if(dfs[i])
            return true;
    }
    dfs[node]=0;
    return false;
}

bool dfsOfGraph(int N,vector<int> adj[])
{
    int i;
    vector<int> vis(N+1,0);
    vector<int> dfs(N+1,0);
    
    for(i=1;i<=N;i++)
    {
        if(!vis[i])
        {
            if(checkDfs(i,adj,vis,dfs))
                return true;
        }
    }
    return false;
}

int main()
{
    int n,m;
    cin>>n>>m;
    vector<int> adj[n+1];
    int u,v;
    for(int i=0;i<m;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
    }
    cout<<dfsOfGraph(n,adj);
    return 0;
}